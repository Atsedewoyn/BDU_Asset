(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{726:function(e,n,r){"use strict";r(252);var t=r(256);n.a=Object(t.a)("flex")},729:function(e,n){var r={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"insert_cars"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"car_brand"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"car_type"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"car_model"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"car_name"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"insert_cars"},arguments:[{kind:"Argument",name:{kind:"Name",value:"objects"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"car_brand"},value:{kind:"Variable",name:{kind:"Name",value:"car_brand"}}},{kind:"ObjectField",name:{kind:"Name",value:"car_model"},value:{kind:"Variable",name:{kind:"Name",value:"car_model"}}},{kind:"ObjectField",name:{kind:"Name",value:"car_name"},value:{kind:"Variable",name:{kind:"Name",value:"car_name"}}},{kind:"ObjectField",name:{kind:"Name",value:"car_type"},value:{kind:"Variable",name:{kind:"Name",value:"car_type"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"affected_rows"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"returning"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"ID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"car_brand"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"car_model"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"car_name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"car_type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"created_at"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updated_at"},arguments:[],directives:[]}]}}]}}]}},{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"delete_cars"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"delete_cars"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"ID"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"_eq"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}]}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"affected_rows"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:543}};r.loc.source={body:"mutation insert_cars(\r\n  $car_brand:String!,\r\n  $car_type:String,\r\n  $car_model:String,\r\n  $car_name:String,\r\n  ) \r\n{\r\n  insert_cars(objects: {\r\n    car_brand:$car_brand, \r\n    car_model:$car_model ,\r\n     car_name: $car_name, \r\n     car_type:$car_type \r\n     }) \r\n     {\r\n    affected_rows\r\n    returning {\r\n      ID\r\n      car_brand\r\n      car_model\r\n      car_name\r\n      car_type\r\n      created_at\r\n      updated_at\r\n    }\r\n  }\r\n}\r\n\r\nmutation delete_cars($id:Int!) {\r\n  delete_cars(where: {ID: {_eq: $id}}) {\r\n    affected_rows\r\n  }\r\n}\r\n\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var r=e.type;"NamedType"===r.kind&&n.add(r.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var c={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}function o(e,n){var r={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(r.loc=e.loc);var t=c[n]||new Set,o=new Set,l=new Set;for(t.forEach((function(e){l.add(e)}));l.size>0;){var _=l;l=new Set,_.forEach((function(e){o.has(e)||(o.add(e),(c[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(n){var t=d(e,n);t&&r.definitions.push(t)})),r}r.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),c[e.name.value]=n}})),e.exports=r,e.exports.insert_cars=o(r,"insert_cars"),e.exports.delete_cars=o(r,"delete_cars")},730:function(e,n){var r={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cars"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"ID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"car_brand"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"car_model"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"car_name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"car_type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"created_at"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updated_at"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:127}};r.loc.source={body:"query{ \r\n  cars {\r\n    ID\r\n    car_brand\r\n    car_model\r\n    car_name\r\n    car_type\r\n    created_at\r\n    updated_at\r\n  }\r\n}\r\n\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var r=e.type;"NamedType"===r.kind&&n.add(r.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var c={};r.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),c[e.name.value]=n}})),e.exports=r},875:function(e,n,r){"use strict";r.r(n);var t=r(253),c=r(524),d=r(523),o=r(535),l=r(871),_=r(556),m=r(726),v=r(226),k=(r(252),r(256)),f=Object(k.a)("layout"),h=r(540),y=r(580),N=(r(199),r(729)),S=r.n(N),w={layout:"blank",data:function(){return{cars:[],car_form:{car_name:"",car_brand:"",car_model:"",car_type:""},car_edit:{car_name:"",car_brand:"",car_model:"",car_type:""},showAdd:!1,showEdit:!1,deleteForm:!1}},mounted:function(){this.getData()},methods:{getData:function(){var e=this;this.$apollo.query({query:r(730)}).then((function(n){e.cars=n.data.cars,console.log(n)})).catch((function(e){console.log(e)}))},saveAction:function(){var e=this;this.$apollo.mutate({mutation:S.a.insert_cars,variables:{car_name:this.car_form.car_name,car_brand:this.car_form.car_brand,car_model:this.car_form.car_model,car_type:this.car_form.car_type}}).then((function(n){e.showAdd=!1,e.cars.push(n.data.insert_cars.returning[0]),console.log(n)})).catch((function(e){console.log(e)}))},getEdit:function(e){this.showEdit=!0,this.car_edit=e},updateAction:function(){var e=this;this.$apollo.mutate({mutation:S.a.insert_cars,variables:{car_name:this.car_edit.car_name,car_model:this.car_edit.car_model,car_brand:this.car_edit.car_brand,car_type:this.car_edit.car_type}}).then((function(n){e.showEdit=!1})).catch((function(e){console.log(e)}))},openConfigDelte:function(e,n){this.index=n,this.car_edit=e,this.deleteForm=!0},deteCars:function(){var e=this;this.$apollo.mutate({mutation:S.a.delete_cars,variables:{id:this.car_edit.ID}}).then((function(n){e.deleteForm=!1,e.cars.splice(e.index,1)})).catch((function(e){console.log(e)}))}}},F=r(58),component=Object(F.a)(w,(function(){var e=this,n=e._self._c;return n("div",{staticClass:"dev1"},[n("h1",[e._v("Hi there how are you ")]),e._v(" "),n("div",[n(o.a,{attrs:{"grid-list-xs":""}},[n(t.a,{attrs:{color:"success",absolute:"",icon:"",top:"",right:""},on:{click:function(n){e.showAdd=!e.showAdd}}},[n(v.a,[e._v("mdi-plus")])],1),e._v(" "),e.showAdd?n(m.a,[n(y.a,{attrs:{name:"car_name",label:"car name",outlined:""},model:{value:e.car_form.car_name,callback:function(n){e.$set(e.car_form,"car_name",n)},expression:"car_form.car_name"}}),e._v(" "),n(y.a,{attrs:{name:"car_model",label:"car model",outlined:""},model:{value:e.car_form.car_model,callback:function(n){e.$set(e.car_form,"car_model",n)},expression:"car_form.car_model"}}),e._v(" "),n(y.a,{attrs:{name:"car_brand",label:"car brand",outlined:""},model:{value:e.car_form.car_brand,callback:function(n){e.$set(e.car_form,"car_brand",n)},expression:"car_form.car_brand"}}),e._v(" "),n(y.a,{attrs:{name:"car_type",label:"car type",outlined:""},model:{value:e.car_form.car_type,callback:function(n){e.$set(e.car_form,"car_type",n)},expression:"car_form.car_type"}}),e._v(" "),n(t.a,{attrs:{color:"success"},on:{click:e.saveAction}},[e._v("Save")]),e._v(" "),n(t.a,{attrs:{color:"error"},on:{click:function(n){e.showAdd=!e.showAdd}}},[e._v("Cancel")])],1):e._e(),e._v(" "),n(f),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("car_ID")]),e._v(" "),n("th",[e._v("car_brand")]),e._v(" "),n("th",[e._v("car_model")]),e._v(" "),n("th",[e._v("car_name")]),e._v(" "),n("th",[e._v("car_type")]),e._v(" "),n("th",[e._v("Actions")])])]),e._v(" "),n("tbody",e._l(e.cars,(function(r,c){return n("tr",{key:r.id},[n("nuxt-link",{attrs:{to:"/article/".concat(r.ID)}},[e._v(e._s(r.ID))]),e._v(" "),n("td",[e._v(e._s(r.car_name))]),e._v(" "),n("td",[e._v(e._s(r.car_brand))]),e._v(" "),n("td",[e._v(e._s(r.car_model))]),e._v(" "),n("td",[e._v(e._s(r.car_type))]),e._v(" "),n("td",[n(t.a,{attrs:{color:"success",icon:""},on:{click:function(n){return e.getEdit(r,c)}}},[n(v.a,[e._v("mdi-pencil")])],1)],1),e._v(" "),n("td",[n(t.a,{attrs:{color:"error",icon:"",dark:""},on:{click:function(n){return e.openConfigDelte(r,c)}}},[n(v.a,[e._v("mdi-delete")])],1)],1)],1)})),0)])],1)],1),e._v(" "),n(l.a,{attrs:{persistent:"",overlay:!1,"max-width":"500px",transition:"dialog-transition"},model:{value:e.showEdit,callback:function(n){e.showEdit=n},expression:"showEdit"}},[n(c.a,{staticClass:"text-center"},[n(d.d,{staticClass:"text-h5 grey lighten-2"},[e._v("\n                edite cars\n            ")]),e._v(" "),n(d.c,[n(y.a,{attrs:{label:"car name",required:""},model:{value:e.car_edit.car_name,callback:function(n){e.$set(e.car_edit,"car_name",n)},expression:"car_edit.car_name"}}),e._v(" "),n(y.a,{attrs:{label:"car model",required:""},model:{value:e.car_edit.car_model,callback:function(n){e.$set(e.car_edit,"car_model",n)},expression:"car_edit.car_model"}}),e._v(" "),n(y.a,{attrs:{label:"car brand",required:""},model:{value:e.car_edit.car_brand,callback:function(n){e.$set(e.car_edit,"car_brand",n)},expression:"car_edit.car_brand"}}),e._v(" "),n(y.a,{attrs:{label:"car type",required:""},model:{value:e.car_edit.car_type,callback:function(n){e.$set(e.car_edit,"car_type",n)},expression:"car_edit.car_type"}})],1),e._v(" "),n(_.a),e._v(" "),n(d.a,[n(h.a),e._v(" "),n(t.a,{attrs:{color:"success"},on:{click:e.updateAction}},[e._v("Save")]),e._v(" "),n(t.a,{attrs:{color:"error"},on:{click:function(n){e.showEdit=!e.showEdit}}},[e._v("Cancel")])],1)],1)],1),e._v(" "),n(l.a,{attrs:{persistent:"",overlay:!1,"max-width":"400px",transition:"dialog-transition"},model:{value:e.deleteForm,callback:function(n){e.deleteForm=n},expression:"deleteForm"}},[n(c.a,[n(d.d,{staticClass:"text-h5 grey lighten-2"},[n("h3",[e._v("are you sure to delete this cars ")])]),e._v(" "),n(d.c,[n("h3",[e._v("car_name"+e._s(e.car_edit.car_name))]),e._v(" "),n("h3",[e._v("card_brand"+e._s(e.car_edit.car_brand))]),e._v(" "),n("h3",[e._v("card_model"+e._s(e.car_edit.car_model))]),e._v(" "),n("h3",[e._v("card_type"+e._s(e.car_edit.car_type))])]),e._v(" "),n(_.a),e._v(" "),n(d.a,[n(h.a),e._v(" "),n(t.a,{attrs:{text:"",color:"secoundary"},on:{click:function(n){e.deleteForm=!e.deleteForm}}},[e._v("cancel")]),e._v(" "),n(t.a,{attrs:{color:"error"},on:{click:e.deteCars}},[e._v("delete")])],1)],1)],1)],1)}),[],!1,null,"68c8a230",null);n.default=component.exports}}]);